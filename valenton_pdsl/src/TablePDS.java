/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jenny May
 */
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TablePDS extends javax.swing.JFrame {

    private static void setModel(DefaultTableModel model) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * Creates new form TablePDS
     */
    public TablePDS() {
        initComponents();
        name();
        menu_();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbl_name = new javax.swing.JLabel();
        txt_search = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        pdsTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txt_lastname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_firstname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_middlename = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_age = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_address = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_birthday = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_religion = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_civilstatus = new javax.swing.JTextField();
        txt_contactno = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txt_zipcode = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txt_sssno = new javax.swing.JTextField();
        btn_add = new javax.swing.JToggleButton();
        btn_edit = new javax.swing.JToggleButton();
        btn_delete = new javax.swing.JToggleButton();
        btn_save = new javax.swing.JToggleButton();
        search_ = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("HI! MY NAME IS");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 19, 258, 44);

        lbl_name.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lbl_name.setText("------");
        jPanel1.add(lbl_name);
        lbl_name.setBounds(299, 19, 180, 44);

        txt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchActionPerformed(evt);
            }
        });
        jPanel1.add(txt_search);
        txt_search.setBounds(518, 11, 398, 45);

        pdsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID_", "lastname", "firstname", "middlename", "age", "address", "birthday", "religion", "civilstatus", "sssno", "zipcode", "contactno"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pdsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pdsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(pdsTable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 80, 999, 202);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Last Name");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(86, 312, 64, 24);

        txt_lastname.setEnabled(false);
        jPanel1.add(txt_lastname);
        txt_lastname.setBounds(168, 302, 160, 34);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("First Name");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(86, 345, 64, 24);

        txt_firstname.setEnabled(false);
        jPanel1.add(txt_firstname);
        txt_firstname.setBounds(170, 340, 160, 34);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Middle Name");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(74, 385, 76, 24);

        txt_middlename.setEnabled(false);
        jPanel1.add(txt_middlename);
        txt_middlename.setBounds(170, 380, 160, 34);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Age");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(130, 430, 23, 24);

        txt_age.setEnabled(false);
        jPanel1.add(txt_age);
        txt_age.setBounds(170, 420, 160, 34);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Address");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(427, 305, 48, 24);

        txt_address.setEnabled(false);
        jPanel1.add(txt_address);
        txt_address.setBounds(493, 302, 165, 34);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Birthday");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(424, 345, 51, 24);

        txt_birthday.setEnabled(false);
        jPanel1.add(txt_birthday);
        txt_birthday.setBounds(493, 342, 165, 34);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Religion");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(429, 390, 46, 24);

        txt_religion.setEnabled(false);
        jPanel1.add(txt_religion);
        txt_religion.setBounds(493, 387, 165, 34);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Civil Status");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(409, 430, 66, 24);

        txt_civilstatus.setEnabled(false);
        jPanel1.add(txt_civilstatus);
        txt_civilstatus.setBounds(493, 427, 165, 34);

        txt_contactno.setEnabled(false);
        jPanel1.add(txt_contactno);
        txt_contactno.setBounds(865, 302, 165, 34);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("SSS No.");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(798, 388, 49, 24);

        txt_zipcode.setEnabled(false);
        jPanel1.add(txt_zipcode);
        txt_zipcode.setBounds(865, 342, 165, 34);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Zip Code");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(793, 342, 54, 24);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Contact No.");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(773, 302, 74, 24);

        txt_sssno.setEnabled(false);
        jPanel1.add(txt_sssno);
        txt_sssno.setBounds(865, 385, 165, 34);

        btn_add.setBackground(new java.awt.Color(255, 255, 255));
        btn_add.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_add.setText("ADD");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });
        jPanel1.add(btn_add);
        btn_add.setBounds(510, 490, 94, 40);

        btn_edit.setBackground(new java.awt.Color(255, 255, 255));
        btn_edit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_edit.setText("EDIT");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });
        jPanel1.add(btn_edit);
        btn_edit.setBounds(650, 490, 94, 40);

        btn_delete.setBackground(new java.awt.Color(255, 255, 255));
        btn_delete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_delete.setText("DELETE");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        jPanel1.add(btn_delete);
        btn_delete.setBounds(790, 490, 94, 40);

        btn_save.setBackground(new java.awt.Color(255, 255, 255));
        btn_save.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_save.setText("SAVE");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        jPanel1.add(btn_save);
        btn_save.setBounds(920, 490, 94, 40);

        search_.setBackground(new java.awt.Color(153, 255, 255));
        search_.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        search_.setText("SEARCH");
        search_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_ActionPerformed(evt);
            }
        });
        search_.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_KeyReleased(evt);
            }
        });
        jPanel1.add(search_);
        search_.setBounds(930, 10, 83, 50);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1062, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public static void search() {
       
            DefaultTableModel model = new DefaultTableModel(new String[]{"ID_","lastname","firstname","middlename","age","address","birthday","religion","civilstatus","sssno","zipcode","contactno"}, 0);
            
           
       try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=pdsValenton;user=sa;password=p@ssw0rd");
            
             String sql = "Select * from pds_tablesheet WHERE ID_ LIKE '%"  + txt_search.getText() + "%'OR lastname LIKE '%"  + txt_search.getText() + "%'OR firstname LIKE '" + txt_search.getText()
            + "%'OR middlename LIKE '" + txt_search.getText() + "%'OR age LIKE '" + txt_search.getText() + "%'OR address LIKE '" + txt_search.getText()
            + "%'OR birthday LIKE '" + txt_search.getText() + "%'OR religion LIKE '" + txt_search.getText() +"%' OR civilstatus LIKE '" + txt_search.getText()
            + "%'OR sssno LIKE '" + txt_search.getText() +"%' OR zipcode LIKE '" + txt_search.getText()
            + "%'OR contactno LIKE '" + txt_search.getText()
            + "%'";
            PreparedStatement pst = con.prepareStatement(sql);
            
            ResultSet rs = pst.executeQuery();
            
            
            if(rs.next()){
                  String id = rs.getString("ID_");
                  String lastname= rs.getString("lastname");
                  String firstname = rs.getString("firstname");
                  String middlename = rs.getString("middlename");
                  String age = rs.getString("age");
                  String address = rs.getString("address");
                  String birthday = rs.getString("birthday");
                  String religion = rs.getString("religion");
                  String civilstatus = rs.getString("civilstatus");
                  String sssno = rs.getString("sssno");
                  String zipcode = rs.getString("zipcode");
                  String contactno = rs.getString("contactno");
                  model.addRow(new Object[]{id,lastname,firstname,middlename,age,address,birthday,religion,civilstatus,sssno,zipcode,contactno});
         
            pdsTable.setModel(model);
            }
            
            
            } catch(Exception e)
        {
               JOptionPane.showMessageDialog(null, e);
        }
       }

    
    public static void name(){
         try{
          
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
              Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=pdsValenton;user=sa;password=p@ssw0rd");
              Statement stmt=con.createStatement();
              
              String sql="SELECT * from tbl_log_in where username = '"+ LogIn.txt_username.getText()+"' and password = '"+LogIn.password.getText()+"'";
              ResultSet rs = stmt.executeQuery(sql);
              
              if(rs.next()){
                String name=rs.getString("name");
                lbl_name.setText(name);
              }
        } catch(Exception e)
        {
               JOptionPane.showMessageDialog(null, e);
        } 
     }
    
    
    public static void menu_(){
      try {
          
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
          try (Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=pdsValenton;user=sa;password=p@ssw0rd")) {
              String sql = "Select * from pds_tablesheet order by  ID_ asc";
              PreparedStatement pst = con.prepareStatement(sql);
              ResultSet rs = pst.executeQuery();
              
              DefaultTableModel model = new DefaultTableModel(new String[]{"ID_","lastname","firstname","middlename","age","address","birthday","religion","civilstatus","sssno","zipcode","contactno."}, 0);
              while(rs.next())
              {           {
                  String id = rs.getString("ID_");
                  String lastname= rs.getString("lastname");
                  String firstname = rs.getString("firstname");
                  String middlename = rs.getString("middlename");
                  String age = rs.getString("age");
                  String address = rs.getString("address");
                  String birthday = rs.getString("birthday");
                  String religion = rs.getString("religion");
                  String civilstatus = rs.getString("civilstatus");
                  String sssno = rs.getString("sssno");
                  String zipcode = rs.getString("zipcode");
                  String contactno = rs.getString("contactno");
                  model.addRow(new Object[]{id,lastname,firstname,middlename,age,address,birthday,religion,civilstatus,sssno,zipcode,contactno});
              }           }
              pdsTable.setModel(model);
          }
            
        } catch(Exception e)
        {
               JOptionPane.showMessageDialog(null, e);
        } 
    }
    
    
    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        txt_lastname.setEnabled(true);
        txt_firstname.setEnabled(true);
        txt_middlename.setEnabled(true);
        txt_age.setEnabled(true);
        txt_address.setEnabled(true);
        txt_birthday.setEnabled(true);
        txt_religion.setEnabled(true);
        txt_civilstatus.setEnabled(true);
        txt_contactno.setEnabled(true);
        txt_zipcode.setEnabled(true);
        txt_sssno.setEnabled(true);
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        txt_lastname.setEnabled(true);
        txt_firstname.setEnabled(true);
        txt_middlename.setEnabled(true);
        txt_age.setEnabled(true);
        txt_address.setEnabled(true);
        txt_birthday.setEnabled(true);
        txt_religion.setEnabled(true);
        txt_civilstatus.setEnabled(true);
        txt_contactno.setEnabled(true);
        txt_zipcode.setEnabled(true);
        txt_sssno.setEnabled(true); 
        
        txt_lastname.isEditable();
        txt_firstname.isEditable();
        txt_middlename.isEditable();
        txt_age.isEditable();
        txt_address.isEditable();
        txt_birthday.isEditable();
        txt_religion.isEditable();
        txt_civilstatus.isEditable();
        txt_contactno.isEditable();
        txt_zipcode.isEditable();
        txt_sssno.isEditable(); 
        

    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        try {
        
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=pdsValenton;user=sa;password=p@ssw0rd");
            String sql = "delete pds_tablesheet where lastname = '" + txt_lastname.getText()+"'";
            PreparedStatement pst = con.prepareStatement(sql);    
            int rs = pst.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Successfully deleted!");
            menu_();
             
            con.close();
       
            
             } catch(Exception e)
        {
               JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=pdsValenton;user=sa;password=p@ssw0rd");
            String sql = "INSERT INTO pds_tablesheet([lastname],[firstname],[middlename],[age],[address],[birthday],[religion],[civilstatus],[sssno],[zipcode],[contactno])VALUES('" + txt_lastname.getText() + "','" + txt_firstname.getText() + "','" + txt_middlename.getText() + "','" + txt_age.getText() + "','" + txt_address.getText() + "','" + txt_birthday.getText() + "','" + txt_religion.getText() +"','" + txt_civilstatus.getText() +"','" + txt_civilstatus.getText() +"','" + txt_sssno.getText() +"','" + txt_contactno.getText() +"')";
            PreparedStatement pst = con.prepareStatement(sql);
            int rs = pst.executeUpdate();

            JOptionPane.showMessageDialog(null, "Successfull");

            con.close();
            menu_();

        } catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_btn_saveActionPerformed

    private void pdsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pdsTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) pdsTable.getModel();
        int SelectedRowIndex = pdsTable.getSelectedRow();
        txt_lastname.setText(model.getValueAt(SelectedRowIndex, 1).toString());
        txt_firstname.setText(model.getValueAt(SelectedRowIndex, 2).toString());
        txt_middlename.setText(model.getValueAt(SelectedRowIndex, 3).toString());
        txt_age.setText(model.getValueAt(SelectedRowIndex, 4).toString());
        txt_address.setText(model.getValueAt(SelectedRowIndex, 5).toString());
        txt_birthday.setText(model.getValueAt(SelectedRowIndex, 6).toString());
        txt_religion.setText(model.getValueAt(SelectedRowIndex, 7).toString());
        txt_civilstatus.setText(model.getValueAt(SelectedRowIndex, 8).toString());
        txt_sssno.setText(model.getValueAt(SelectedRowIndex, 9).toString());
        txt_zipcode.setText(model.getValueAt(SelectedRowIndex, 10).toString());
        txt_contactno.setText(model.getValueAt(SelectedRowIndex, 11).toString());
        
    }//GEN-LAST:event_pdsTableMouseClicked

    private void search_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_ActionPerformed
        search();
    }//GEN-LAST:event_search_ActionPerformed

    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchActionPerformed
        search();
    }//GEN-LAST:event_txt_searchActionPerformed

    private void search_KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_KeyReleased
        search();
    }//GEN-LAST:event_search_KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TablePDS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TablePDS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TablePDS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TablePDS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TablePDS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btn_add;
    private javax.swing.JToggleButton btn_delete;
    private javax.swing.JToggleButton btn_edit;
    private javax.swing.JToggleButton btn_save;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JLabel lbl_name;
    public static javax.swing.JTable pdsTable;
    private javax.swing.JToggleButton search_;
    public static javax.swing.JTextField txt_address;
    public static javax.swing.JTextField txt_age;
    public static javax.swing.JTextField txt_birthday;
    public static javax.swing.JTextField txt_civilstatus;
    public static javax.swing.JTextField txt_contactno;
    public static javax.swing.JTextField txt_firstname;
    public static javax.swing.JTextField txt_lastname;
    public static javax.swing.JTextField txt_middlename;
    public static javax.swing.JTextField txt_religion;
    public static javax.swing.JTextField txt_search;
    public static javax.swing.JTextField txt_sssno;
    public static javax.swing.JTextField txt_zipcode;
    // End of variables declaration//GEN-END:variables
}
